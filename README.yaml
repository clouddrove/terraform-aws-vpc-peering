---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#
# Name of this project
name: Terraform AWS VPC Peering

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-vpc-peering

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-vpc-peering.svg"
    url: "https://github.com/clouddrove/terraform-aws-vpc-peering/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-vpc-peering/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-vpc-peering/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

prerequesties:
  - name: Terraform 1.5.4
    url: https://learn.hashicorp.com/terraform/getting-started/install.html

#  description of this project
description: |-
  Terraform module to connect two VPC's on AWS.
# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  ### default Example
  Here is an example of how you can use this module in your inventory structure:
    ```hcl
    module "vpc-peering" {
      source            = "clouddrove/vpc-peering/aws"
      version           = "1.3.0"
      name             = local.name
      environment      = local.environment
      requestor_vpc_id = "vpc-xxxxxxxxxxxxxx"
      acceptor_vpc_id  = "vpc-xxxxxxxxxxxxxx"
    }
  ```
  ### multi-region
    ```hcl
    module "vpc-peering" {
      source            = "clouddrove/vpc-peering/aws"
      version           = "1.3.0"
      name             = local.name
      environment      = local.environment
      requestor_vpc_id = "vpc-xxxxxxxxxxxx"

      acceptor_vpc_id = "vpc-xxxxxxxxxxxxx"
      accept_region   = "eu-north-1"
      auto_accept     = false
    }
  ```
